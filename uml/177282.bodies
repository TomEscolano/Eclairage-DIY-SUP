class Ent
!!!189058.cpp!!!	setID(in id : uint) : void
	this->id = id;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET id =  " + std::to_string(this->getID()) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189186.cpp!!!	setAllume(in etat : bool) : void
	this->allume = etat;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET allume = " + std::to_string(this->allume) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189314.cpp!!!	setActive(in etat : bool) : void
	this->active = etat;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET active = " + std::to_string(this->active) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189442.cpp!!!	setNom(in nom : string) : void
	this->nom = nom;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET nom = \"" + this->nom + "\" WHERE id = " + std::to_string(this->getID()) + ";");
!!!189570.cpp!!!	setCouleur(in couleur : Couleur) : void
	this->couleur = couleur;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET couleur =  " + std::to_string(this->couleur) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189698.cpp!!!	setConsommation(in conso : uint) : void
	this->consommation = conso;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET consommation =  " + std::to_string(this->consommation) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189826.cpp!!!	setX(in x : int) : void
	this->x = x;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET x =  " + std::to_string(this->x) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!189954.cpp!!!	setY(in y : int) : void
	this->y = y;
	SqlitePersiBny persi(this->DB);
	persi.executerSql("UPDATE eclairages SET y =  " + std::to_string(this->y) + " WHERE id = " + std::to_string(this->getID()) + ";");
!!!190082.cpp!!!	getID() : uint
	return this->id;
!!!190210.cpp!!!	getAllume() : bool
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT allume FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->allume = resultat.at(0).at(0).second == "1" ? true : false; 
	return this->allume;
!!!190338.cpp!!!	getActive() : bool
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT active FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->active = resultat.at(0).at(0).second == "1" ? true : false;
	return this->active;
!!!190466.cpp!!!	getNom() : string
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT nom FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->nom = resultat.at(0).at(0).second;
	return this->nom;
!!!190594.cpp!!!	getCouleur() : Couleur
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT couleur FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	if(resultat.at(0).at(0).second == "0")
		this->couleur = Bleu;
	if(resultat.at(0).at(0).second == "1")
		this->couleur = Blanc;
	if(resultat.at(0).at(0).second == "2")
		this->couleur = Rouge;

	return this->couleur;
!!!190722.cpp!!!	getConsommation() : uint
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT consommation FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->consommation = atoi(resultat.at(0).at(0).second.c_str());
	return this->consommation;
!!!190850.cpp!!!	getX() : int
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT x FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->x = atoi(resultat.at(0).at(0).second.c_str());
	return this->x;
!!!190978.cpp!!!	getY() : int
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	persi.executerSql("SELECT y FROM eclairages WHERE id = " + std::to_string(this->getID()) + ";", resultat);
	this->y = atoi(resultat.at(0).at(0).second.c_str());
	return this->y;
