class UcModifier
!!!168450.cpp!!!	doIt(in eclairage : EclairageMulticolore::Ent) : void
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;

	try
	{
		persi.executerSql("SELECT * FROM unicolores WHERE id = " + std::to_string(eclairage.getID()) + ";", resultat);
		resultat.at(0).at(0).second;

   		persi.executerSql("UPDATE eclairages SET nom = " + eclairage.getNom() + " allume = " + std::to_string(eclairage.getAllume()) + " active = " + std::to_string(eclairage.getActive()) + " consommation =" + std::to_string(eclairage.getConsommation()) + " couleur = " + std::to_string(eclairage.getCouleur()) + " x = " + std::to_string(eclairage.getX()) + " y = " + std::to_string(eclairage.getY()) + " WHERE id = " + std::to_string(eclairage.getID()) + ";");
	}
	catch(...)
	{
		this->ucAjouter.doIt(eclairage);
	}
!!!168578.cpp!!!	doIt(in eclairage : EclairageUnicolore::Ent) : void
	SqlitePersiBny persi(this->DB);
	SqlitePersiBny::Resultat resultat;
	
	try
	{
		persi.executerSql("SELECT * FROM multicolores WHERE id = " + std::to_string(eclairage.getID()) + ";", resultat);
		resultat.at(0).at(0).second;

   		persi.executerSql("UPDATE eclairages SET nom = \"" + eclairage.getNom() + "\" allume = " + std::to_string(eclairage.getAllume()) + " active = " + std::to_string(eclairage.getActive()) + " consommation = " + std::to_string(eclairage.getConsommation()) + " couleur = " + std::to_string(eclairage.getCouleur()) + " x = " + std::to_string(eclairage.getX()) + " y = " + std::to_string(eclairage.getY()) + " WHERE id = " + std::to_string(eclairage.getID()) + ";");
	
   		persi.executerSql("UPDATE multicolores SET id = " + std::to_string(eclairage.getID())+ " adresseMac = " + eclairage.getAdresseMac()+ " adresseIP = " + eclairage.getAdresseIP()+ " versionFirmware = " + std::to_string(eclairage.getVersionFirmware())+ " couleur = " + std::to_string(eclairage.getCouleur())+ " luminosite = " + std::to_string(eclairage.getLuminosite())+ " niveauBatterie = " + std::to_string(eclairage.getNiveauBatterie())+ " WHERE id = " + std::to_string(eclairage.getID())+ ";");
	}
	catch(...)
	{
		this->ucAjouter.doIt(eclairage);
	}
